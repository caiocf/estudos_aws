openapi: 3.0.1
info:
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  version: 1.0.0
  title: Petstore - OpenAPI 3.0
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
  - name: user
    description: Operations about user
paths:
  /pets_bigs:
    get:
      x-amazon-apigateway-integration:
        uri: "${lambda_get_pets_arn}"
        responses: {}
        httpMethod: "POST"
        type: "aws_proxy"
      security:
        - APIGatewayAuthorizer: []
      summary: List all pets
      operationId: listPets
      responses:
        '200':
          description: An array of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
  /pets:
    get:
      x-amazon-apigateway-integration:
        uri: "${lambda_get_pets_arn}"
        responses: {}
        httpMethod: "POST"
        type: "aws_proxy"
      summary: List all pets
      operationId: listPets
      responses:
        '200':
          description: An array of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
components:
  securitySchemes:
    APIGatewayAuthorizer:
      type: apiKey
      in: header
      name: Authorization
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: "${lambda_authorizer_arn}"
        identitySource: "method.request.header.Authorization"
        authorizerResultTtlInSeconds: 0
        type: token
    sigv4:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype": awsSigv4
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the Pet
        name:
          type: string
          description: Name of the Pet
        type:
          type: string
          description: Type of the Pet (e.g., dog, cat)
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message